{"version":3,"sources":["../../src/runtime/loop-expression.js"],"names":["toArray","n","value","Array","i","isNaN"],"mappings":";;;;;;;AAKA;;AALA;;;;AAOA,MAAMA,OAAO,GAAG,kBAAO,UAAUC,CAAV,EAAa;AAChC,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAd;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AACxBF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWA,CAAC,GAAG,CAAf;AACH;;AACD,SAAOF,KAAP;AACH,CANe,CAAhB;;AAQe,kBAAUA,KAAV,EAAiB;AAC5B,MAAI,CAACG,KAAK,CAACH,KAAD,CAAV,EAAmB;AACf,UAAMD,CAAC,GAAG,CAACC,KAAX;AACAA,IAAAA,KAAK,GAAGF,OAAO,CAACC,CAAD,CAAf;AACH;;AACD,SAAOC,KAAP;AACH","sourcesContent":["/**\n * @file loop expression\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport {cached} from '../shared/util';\n\nconst toArray = cached(function (n) {\n    const value = new Array(n);\n    for (let i = 0; i < n; i++) {\n        value[i] = i + 1;\n    }\n    return value;\n});\n\nexport default function (value) {\n    if (!isNaN(value)) {\n        const n = +value;\n        value = toArray(n);\n    }\n    return value;\n}\n\n"],"file":"loop-expression.js"}